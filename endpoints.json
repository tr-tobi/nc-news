{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all articles",
    "queries": [],
    "exampleResponse": {
      "articles": {
        "title": "Running a Node App",
        "topic": "coding",
        "author": "jessjelly",
        "body": "This is part two of a series on how to get up and running with Systemd and Node.js. This part dives deeper into how to successfully run your app with systemd long-term, and how to set it up in a production environment.",
        "created_at": 1604728980000,
        "votes": 0,
        "article_img_url": "https://images.pexels.com/photos/11035380/pexels-photo-11035380.jpeg?w=700&h=700"
      }
    }
  },
  "GET /api/articles/:article_id": {
    "description": "serves an object of a specific article by its article_id",
    "queries": [],
    "exampleResponse": {
      "article": {
        "article_id": 6,
        "title": "JavaScriptâ€™s Apply, Call, and Bind Methods are Essential for JavaScript Professionals",
        "topic": "coding",
        "author": "grumpy19",
        "body": "Functions are objects in JavaScript, as you should know by now, if you have read any of the prerequisite articles. And as objects, functions have methods, including the powerful Apply, Call, and Bind methods. On the one hand, Apply and Call are nearly identical and are frequently used in JavaScript for borrowing methods and for setting the this value explicitly. We also use Apply for variable-arity functions; you will learn more about this in a bit.",
        "created_at": "2020-11-11T15:09:00.000Z",
        "votes": 0,
        "article_img_url": "https://images.pexels.com/photos/4383298/pexels-photo-4383298.jpeg?w=700&h=700"
      }
    }
  }
}
